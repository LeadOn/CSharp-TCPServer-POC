// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace YuGames.EntitiesContext.Migrations
{
    /// <inheritdoc />
    public partial class Added_TournamentPlayer_Table : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AlterColumn<DateTime>(
                name: "planned_to",
                table: "Tournament",
                type: "TEXT",
                nullable: false,
                defaultValue: new DateTime(2023, 9, 15, 20, 13, 38, 116, DateTimeKind.Utc).AddTicks(8099),
                oldClrType: typeof(DateTime),
                oldType: "TEXT",
                oldDefaultValue: new DateTime(2023, 9, 15, 10, 2, 3, 149, DateTimeKind.Utc).AddTicks(140));

            migrationBuilder.AlterColumn<DateTime>(
                name: "planned_from",
                table: "Tournament",
                type: "TEXT",
                nullable: false,
                defaultValue: new DateTime(2023, 9, 14, 20, 13, 38, 116, DateTimeKind.Utc).AddTicks(7983),
                oldClrType: typeof(DateTime),
                oldType: "TEXT",
                oldDefaultValue: new DateTime(2023, 9, 14, 10, 2, 3, 149, DateTimeKind.Utc).AddTicks(60));

            migrationBuilder.AlterColumn<DateTime>(
                name: "created_on",
                table: "Player",
                type: "TEXT",
                nullable: false,
                defaultValue: new DateTime(2023, 9, 14, 20, 13, 38, 117, DateTimeKind.Utc).AddTicks(1220),
                oldClrType: typeof(DateTime),
                oldType: "TEXT",
                oldDefaultValue: new DateTime(2023, 9, 14, 10, 2, 3, 152, DateTimeKind.Utc).AddTicks(5410));

            migrationBuilder.AlterColumn<DateTime>(
                name: "played_on",
                table: "FifaGamePlayed",
                type: "TEXT",
                nullable: false,
                defaultValue: new DateTime(2023, 9, 14, 22, 13, 38, 117, DateTimeKind.Local).AddTicks(2070),
                oldClrType: typeof(DateTime),
                oldType: "TEXT",
                oldDefaultValue: new DateTime(2023, 9, 14, 12, 2, 3, 152, DateTimeKind.Local).AddTicks(6040));

            migrationBuilder.CreateTable(
                name: "TournamentPlayer",
                columns: table => new
                {
                    id = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    player_id = table.Column<int>(type: "INTEGER", nullable: false),
                    fifa_team_id = table.Column<int>(type: "INTEGER", nullable: false),
                    joined_at = table.Column<DateTime>(type: "TEXT", nullable: false, defaultValue: new DateTime(2023, 9, 14, 20, 13, 38, 116, DateTimeKind.Utc).AddTicks(8546))
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TournamentPlayer", x => x.id);
                    table.ForeignKey(
                        name: "FK_TournamentPlayer_FifaTeam",
                        column: x => x.fifa_team_id,
                        principalTable: "FifaTeam",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_TournamentPlayer_Player",
                        column: x => x.player_id,
                        principalTable: "Player",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_TournamentPlayer_fifa_team_id",
                table: "TournamentPlayer",
                column: "fifa_team_id");

            migrationBuilder.CreateIndex(
                name: "IX_TournamentPlayer_player_id",
                table: "TournamentPlayer",
                column: "player_id");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "TournamentPlayer");

            migrationBuilder.AlterColumn<DateTime>(
                name: "planned_to",
                table: "Tournament",
                type: "TEXT",
                nullable: false,
                defaultValue: new DateTime(2023, 9, 15, 10, 2, 3, 149, DateTimeKind.Utc).AddTicks(140),
                oldClrType: typeof(DateTime),
                oldType: "TEXT",
                oldDefaultValue: new DateTime(2023, 9, 15, 20, 13, 38, 116, DateTimeKind.Utc).AddTicks(8099));

            migrationBuilder.AlterColumn<DateTime>(
                name: "planned_from",
                table: "Tournament",
                type: "TEXT",
                nullable: false,
                defaultValue: new DateTime(2023, 9, 14, 10, 2, 3, 149, DateTimeKind.Utc).AddTicks(60),
                oldClrType: typeof(DateTime),
                oldType: "TEXT",
                oldDefaultValue: new DateTime(2023, 9, 14, 20, 13, 38, 116, DateTimeKind.Utc).AddTicks(7983));

            migrationBuilder.AlterColumn<DateTime>(
                name: "created_on",
                table: "Player",
                type: "TEXT",
                nullable: false,
                defaultValue: new DateTime(2023, 9, 14, 10, 2, 3, 152, DateTimeKind.Utc).AddTicks(5410),
                oldClrType: typeof(DateTime),
                oldType: "TEXT",
                oldDefaultValue: new DateTime(2023, 9, 14, 20, 13, 38, 117, DateTimeKind.Utc).AddTicks(1220));

            migrationBuilder.AlterColumn<DateTime>(
                name: "played_on",
                table: "FifaGamePlayed",
                type: "TEXT",
                nullable: false,
                defaultValue: new DateTime(2023, 9, 14, 12, 2, 3, 152, DateTimeKind.Local).AddTicks(6040),
                oldClrType: typeof(DateTime),
                oldType: "TEXT",
                oldDefaultValue: new DateTime(2023, 9, 14, 22, 13, 38, 117, DateTimeKind.Local).AddTicks(2070));
        }
    }
}
